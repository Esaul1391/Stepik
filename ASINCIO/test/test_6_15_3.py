import pytest
import asyncio
from io import StringIO
import sys
from ASINCIO import t6_15_3 as verses

@pytest.mark.asyncio
async def test_blacks():
    # Перенаправляем stdout в буфер
    old_stdout = sys.stdout
    sys.stdout = StringIO()

    # Проверяем каждую строку
    for i, verse in enumerate(verses):
        await blacks(10 - i, verse)

    # Получаем весь вывод
    output = sys.stdout.getvalue()

    # Восстанавливаем stdout
    sys.stdout = old_stdout

    # Ожидаемые строки вывода
    expected_output = (
        "10 негритят решили пообедать, Один вдруг поперхнулся, их осталось 9\n"
        "9 негритят, поев, клевали носом, Один не смог проснуться, их осталось 8\n"
        "8 негритят в Девон ушли потом, Один не возвратился, остались всемером\n"
        "7 негритят дрова рубили вместе, Зарубил один себя — и осталось 6\n"
        "6 негритят пошли на пасеку гулять, Одного ужалил шмель, их осталось 5\n"
        "5 негритят судейство учинили, Засудили одного, осталось их 4\n"
        "4 негритенка пошли купаться в море, Один попался на приманку, их осталось 3\n"
        "3 негритят в зверинце оказались, Одного схватил медведь, и вдвоем остались \n"
        "2 негритят легли на солнцепеке, Один сгорел — и вот один, несчастный, одинокий 1\n"
        "1 Последний негритенок поглядел устало, Он пошел повесился, и никого не стало\n"
    )

    # Сравниваем ожидаемый вывод с полученным
    assert output == expected_output

@pytest.mark.asyncio
async def test_main():
    # Перенаправляем stdout в буфер
    old_stdout = sys.stdout
    sys.stdout = StringIO()

    # Запускаем main функцию
    await main()

    # Получаем весь вывод
    output = sys.stdout.getvalue()

    # Восстанавливаем stdout
    sys.stdout = old_stdout

    # Ожидаемые строки вывода
    expected_output = (
        "10 негритят решили пообедать, Один вдруг поперхнулся, их осталось 9\n"
        "9 негритят, поев, клевали носом, Один не смог проснуться, их осталось 8\n"
        "8 негритят в Девон ушли потом, Один не возвратился, остались всемером\n"
        "7 негритят дрова рубили вместе, Зарубил один себя — и осталось 6\n"
        "6 негритят пошли на пасеку гулять, Одного ужалил шмель, их осталось 5\n"
        "5 негритят судейство учинили, Засудили одного, осталось их 4\n"
        "4 негритенка пошли купаться в море, Один попался на приманку, их осталось 3\n"
        "3 негритят в зверинце оказались, Одного схватил медведь, и вдвоем остались \n"
        "2 негритят легли на солнцепеке, Один сгорел — и вот один, несчастный, одинокий 1\n"
        "1 Последний негритенок поглядел устало, Он пошел повесился, и никого не стало\n"
    )

    # Сравниваем ожидаемый вывод с полученным
    assert output == expected_output